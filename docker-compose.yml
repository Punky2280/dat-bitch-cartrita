services:
  # PostgreSQL Database - Using pgvector-enabled PostgreSQL
  postgres:
    image: pgvector/pgvector:pg16
    container_name: cartrita-db-new
    restart: unless-stopped
    environment:
      POSTGRES_USER: robert
      POSTGRES_PASSWORD: punky1
      POSTGRES_DB: dat-bitch-cartrita
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8'
    ports:
      - '5435:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - cartrita-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U robert -d dat-bitch-cartrita']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cartrita-redis-new
    restart: unless-stopped
    ports:
      - '6380:6379'
    volumes:
      - redis_data:/data
    networks:
      - cartrita-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cartrita-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=8001
      - POSTGRES_USER=robert
      - POSTGRES_PASSWORD=punky1
      - POSTGRES_DB=dat-bitch-cartrita
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://robert:punky1@postgres:5432/dat-bitch-cartrita
    env_file:
      - packages/backend/.env
    ports:
      - '8001:8001'
    volumes:
      - ./packages/backend/uploads:/usr/src/app/packages/backend/uploads
      - ./packages/backend/logs:/usr/src/app/packages/backend/logs
    networks:
      - cartrita-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget --no-verbose --tries=1 --spider http://localhost:8001/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Development server with hot reload)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: cartrita-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - VITE_BACKEND_URL=http://localhost:8001
    ports:
      - '3001:3000'
    volumes:
      - ./packages/frontend/src:/app/src
      - ./packages/frontend/public:/app/public
      - ./packages/frontend/index.html:/app/index.html
      - ./packages/frontend/vite.config.ts:/app/vite.config.ts
      - ./packages/frontend/tailwind.config.js:/app/tailwind.config.js
      - ./packages/frontend/postcss.config.js:/app/postcss.config.js
      - ./packages/frontend/tsconfig.json:/app/tsconfig.json
      - /app/node_modules
    networks:
      - cartrita-network
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:

networks:
  cartrita-network:
    driver: bridge
