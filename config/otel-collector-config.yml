# OpenTelemetry Collector configuration for Cartrita MCP
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus metrics scraping
  prometheus:
    config:
      scrape_configs:
        - job_name: 'cartrita-mcp'
          static_configs:
            - targets: ['mcp-orchestrator:9090', 'mcp-supervisor-intelligence:9090']

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # Add resource attributes
  resource:
    attributes:
      - key: service.namespace
        value: cartrita-mcp
        action: upsert
      - key: deployment.environment
        value: production
        action: upsert

  # Tail sampling for trace optimization
  tail_sampling:
    decision_wait: 10s
    num_traces: 100
    expected_new_traces_per_sec: 10
    policies:
      # Always sample errors
      - name: errors
        type: status_code
        status_code:
          status_codes: [ERROR]
      
      # Sample 10% of successful traces
      - name: randomized
        type: probabilistic
        probabilistic:
          sampling_percentage: 10

  # Memory limiter to prevent OOM
  memory_limiter:
    limit_mib: 512
    spike_limit_mib: 128

exporters:
  # Jaeger for traces
  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true

  # Prometheus for metrics
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: cartrita_mcp

  # Console exporter for debugging
  logging:
    loglevel: info

  # OTLP HTTP for external systems
  otlphttp:
    endpoint: "${OTEL_EXPORTER_OTLP_HTTP_ENDPOINT}"
    headers:
      api-key: "${OTEL_EXPORTER_OTLP_HEADERS}"
    compression: gzip

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, tail_sampling, batch]
      exporters: [jaeger, logging]

    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, resource, batch]
      exporters: [prometheus, logging]

    logs:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [logging]

  extensions: [health_check, pprof, zpages]

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  
  pprof:
    endpoint: 0.0.0.0:1777
  
  zpages:
    endpoint: 0.0.0.0:55679