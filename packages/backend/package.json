{
  "name": "backend",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "build:router": "node scripts/buildRouter.js",
    "prestart": "node scripts/buildRouter.js",
    "start": "node .",
    "dev": "npm run build:router && node .",
    "build:router:watch": "tsc -p tsconfig.router.json --watch",
    "serve:watch": "nodemon --watch dist/router --watch src --ext js,json --delay 300ms index.js",
    "dev:watch": "concurrently -k -n TSC,NODE -c cyan,magenta 'npm:build:router:watch' 'npm:serve:watch'",
    "migrate": "node-pg-migrate up",
    "lint": "eslint . --ext .js --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext .js --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test:micro": "node micro/microRunner.mjs",
    "test": "NODE_ENV=test USE_COMPOSITE_REGISTRY=1 REGISTRY_PHASE_MAX=0 MINIMAL_REGISTRY=1 jest --config jest.config.cjs --runInBand --detectOpenHandles --forceExit",
    "test:pure": "NODE_ENV=test USE_COMPOSITE_REGISTRY=1 REGISTRY_PHASE_MAX=0 MINIMAL_REGISTRY=1 jest --config jest.config.cjs --runInBand --detectOpenHandles --forceExit",
    "tf:init": "terraform init",
    "tf:plan": "terraform plan",
    "tf:apply": "terraform apply",
    "tf:destroy": "terraform destroy",
    "tf:validate": "terraform validate",
    "tf:format": "terraform fmt",
    "docker:build": "docker build -t cartrita-backend .",
    "docker:run": "docker run -p 8001:8001 cartrita-backend",
    "docker:compose:up": "docker-compose up -d",
    "docker:compose:down": "docker-compose down",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:studio": "prisma studio",
    "prisma:reset": "prisma migrate reset",
    "db:seed": "node scripts/seed.js",
    "deps:check": "npm-check-updates",
    "deps:update": "npm-check-updates -u",
    "security:audit": "npm audit",
    "security:fix": "npm audit fix",
    "prepare": "husky install",
    "pre-commit": "lint-staged"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.60.0",
    "@deepgram/sdk": "^4.11.2",
    "@huggingface/inference": "^2.8.1",
    "@langchain/anthropic": "^0.3.8",
    "@langchain/community": "^0.3.50",
    "@langchain/core": "^0.3.68",
    "@langchain/langgraph": "^0.4.3",
    "@octokit/rest": "^22.0.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.62.0",
    "@opentelemetry/core": "^2.0.1",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.57.0",
    "@opentelemetry/exporter-prometheus": "^0.57.0",
    "@opentelemetry/exporter-trace-otlp-grpc": "^0.57.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.57.0",
    "@opentelemetry/instrumentation-express": "^0.52.0",
    "@opentelemetry/instrumentation-http": "^0.203.0",
    "@opentelemetry/instrumentation-pg": "^0.51.0",
    "@opentelemetry/instrumentation-redis": "^0.46.0",
    "@opentelemetry/resources": "^2.0.1",
    "@opentelemetry/sdk-metrics": "^2.0.1",
    "@opentelemetry/sdk-node": "^0.203.0",
    "@opentelemetry/sdk-trace-base": "^2.0.1",
    "@opentelemetry/sdk-trace-node": "^2.0.1",
    "@opentelemetry/semantic-conventions": "^1.36.0",
    "@prisma/client": "^6.1.0",
    "ajv-formats": "^3.0.1",
    "async": "^3.2.6",
    "aws-sdk": "^2.1692.0",
    "axios": "^1.11.0",
    "bcrypt": "^6.0.0",
    "body-parser": "^1.20.3",
    "bull": "^4.16.5",
    "bull-board": "^0.10.0",
    "cheerio": "^1.1.2",
    "compression": "^1.8.1",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "csv-parser": "^3.2.0",
    "docker": "^0.2.14",
    "dockerode": "^4.0.2",
    "dotenv": "^16.4.5",
    "duck-duck-scrape": "^2.2.7",
    "express": "^5.1.0",
    "express-rate-limit": "^8.0.1",
    "express-validator": "^7.2.1",
    "googleapis": "^155.0.1",
    "graphql": "^16.9.0",
    "helmet": "^8.1.0",
    "http": "^0.0.1-security",
    "huggingface": "^1.4.0",
    "ioredis": "^5.7.0",
    "joi": "^17.13.3",
    "jsonwebtoken": "^9.0.2",
    "kubernetes-client": "^0.0.1",
    "langchain": "^0.3.30",
    "lodash": "^4.17.21",
    "mammoth": "^1.10.0",
    "ml-distance": "^4.0.1",
    "ml-kmeans": "^6.0.0",
    "moment": "^2.30.1",
    "mongoose": "^8.9.2",
    "morgan": "^1.10.1",
    "multer": "^2.0.2",
    "natural": "^8.1.0",
    "node-cache": "^5.1.2",
    "node-cron": "^4.2.1",
    "node-fetch": "^3.3.2",
    "node-pg-migrate": "^8.0.3",
    "octokit": "^4.0.0",
    "openai": "^5.12.2",
    "pdf-parse-fork": "^1.2.0",
    "pdf2pic": "^3.2.0",
    "pg": "^8.16.3",
    "prom-client": "^15.1.3",
    "qrcode": "^1.5.4",
    "rate-limit-redis": "^4.2.2",
    "redis": "^5.8.0",
    "socket.io": "^4.8.1",
    "speakeasy": "^2.0.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "ws": "^8.18.3",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@babel/core": "^7.25.0",
    "@babel/preset-env": "^7.25.0",
    "@eslint/js": "^9.17.0",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.12",
    "@types/node": "^22.10.1",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.6",
    "babel-jest": "^29.7.0",
    "chai": "^5.2.1",
    "concurrently": "^9.1.0",
    "cross-env": "^7.0.3",
    "docker-compose": "^0.24.8",
    "eslint": "^9.17.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-security": "^3.0.1",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.10",
    "mocha": "^11.7.1",
    "nodemon": "^3.1.7",
    "npm-check-updates": "^17.1.11",
    "prettier": "^3.4.2",
    "prisma": "^6.1.0",
    "sinon": "^21.0.0",
    "socket.io-client": "^4.8.1",
    "supertest": "^7.1.4",
    "terraform": "^1.10.3",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.2",
    "vitest": "^3.2.4"
  },
  "overrides": {
    "@browserbasehq/stagehand@1.14.0": {
      "openai": "^5.12.2",
      "dotenv": "^16.4.5"
    }
  },
  "type": "module",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "lint-staged": {
    "*.{js,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test"
    }
  },
  "browserslist": [
    "node 18"
  ],
  "description": "This backend powers Cartrita's multi-agent system, workflow engine, model routing, persona management, audio pipeline, and supporting APIs.",
  "directories": {
    "doc": "docs",
    "test": "tests"
  },
  "keywords": [
    "ai",
    "agents",
    "automation",
    "collaboration",
    "langchain",
    "openai",
    "anthropic",
    "terraform",
    "microservices",
    "real-time",
    "websocket",
    "workflow",
    "orchestration"
  ],
  "author": "",
  "license": "ISC"
}
