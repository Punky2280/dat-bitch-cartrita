apiVersion: v1
kind: ConfigMap
metadata:
  name: cartrita-manifests
  namespace: cartrita-system
data:
  # Base configurations that can be reused across environments
  base-config.yaml: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: cartrita-base-config
    data:
      NODE_ENV: "production"
      PORT: "3000"
      LOG_LEVEL: "info"
      MAX_REQUEST_SIZE: "50mb"
      SESSION_TIMEOUT: "24h"
      CORS_ORIGIN: "*"
      RATE_LIMIT_WINDOW: "15"
      RATE_LIMIT_MAX: "1000"

  resource-limits.yaml: |
    # Resource limits and requests for different environments
    development:
      backend:
        requests:
          memory: "256Mi"
          cpu: "125m"
        limits:
          memory: "1Gi"
          cpu: "500m"
      frontend:
        requests:
          memory: "64Mi"
          cpu: "50m"
        limits:
          memory: "256Mi"
          cpu: "200m"
    
    staging:
      backend:
        requests:
          memory: "512Mi"
          cpu: "250m"
        limits:
          memory: "2Gi"
          cpu: "1000m"
      frontend:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "512Mi"
          cpu: "300m"
    
    production:
      backend:
        requests:
          memory: "1Gi"
          cpu: "500m"
        limits:
          memory: "4Gi"
          cpu: "2000m"
      frontend:
        requests:
          memory: "256Mi"
          cpu: "150m"
        limits:
          memory: "1Gi"
          cpu: "500m"

  monitoring.yaml: |
    apiVersion: v1
    kind: Service
    metadata:
      name: cartrita-monitoring
      labels:
        app: cartrita-monitoring
    spec:
      selector:
        app: cartrita-backend
      ports:
      - name: metrics
        port: 9090
        targetPort: 3000
        protocol: TCP
      type: ClusterIP
    ---
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      name: cartrita-backend
      labels:
        app: cartrita-backend
    spec:
      selector:
        matchLabels:
          app: cartrita-backend
      endpoints:
      - port: http
        path: /api/metrics
        interval: 30s
        scrapeTimeout: 10s

  rbac.yaml: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: cartrita-service-account
      namespace: cartrita-production
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: cartrita-cluster-role
    rules:
    - apiGroups: [""]
      resources: ["configmaps", "secrets", "services", "pods"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["apps"]
      resources: ["deployments", "replicasets"]
      verbs: ["get", "list", "watch"]
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: cartrita-cluster-role-binding
    subjects:
    - kind: ServiceAccount
      name: cartrita-service-account
      namespace: cartrita-production
    roleRef:
      kind: ClusterRole
      name: cartrita-cluster-role
      apiGroup: rbac.authorization.k8s.io

  hpa.yaml: |
    apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      name: cartrita-backend-hpa
      namespace: cartrita-production
    spec:
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: cartrita-backend
      minReplicas: 3
      maxReplicas: 20
      metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 70
      - type: Resource
        resource:
          name: memory
          target:
            type: Utilization
            averageUtilization: 80
      behavior:
        scaleDown:
          stabilizationWindowSeconds: 300
          policies:
          - type: Percent
            value: 10
            periodSeconds: 60
        scaleUp:
          stabilizationWindowSeconds: 60
          policies:
          - type: Percent
            value: 50
            periodSeconds: 60
